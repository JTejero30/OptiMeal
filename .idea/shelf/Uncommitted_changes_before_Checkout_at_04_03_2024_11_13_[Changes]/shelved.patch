Index: app/src/main/java/com/example/app/ui/user/userDataFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.ui.user\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.AutoCompleteTextView\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.lifecycle.lifecycleScope\r\nimport com.example.app.databinding.FragmentUserDataBinding\r\nimport com.google.android.material.textfield.TextInputEditText\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\n\r\nclass userDataFragment : Fragment() {\r\n\r\n    private var _binding: FragmentUserDataBinding? = null\r\n    private val binding get() = _binding!!\r\n    private val dietetics = arrayOf(\"Vegana\", \"Vegetariana\", \"Estándar\")\r\n    private val activities = arrayOf(\"Poco o ninguno\", \"Ligero, 1-3 dias/semana\", \"Moderado, 3-5 dias/semana\", \"Muy activo, 5-7 dias/semana\")\r\n    private val objetives = arrayOf(\"Perder peso\", \"Ganar masa muscular\", \"Comer más saludable\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        _binding = FragmentUserDataBinding.inflate(inflater, container, false)\r\n\r\n        val userDataViewModel = ViewModelProvider(this).get(userDataViewModel::class.java)\r\n\r\n        //hacemos la llamada asyncrona del metodo getData()\r\n        lifecycleScope.launch(Dispatchers.Main) {\r\n            val user = userDataViewModel.getData()\r\n            user.let {\r\n                Log.d(\"lambda\", it.toString())\r\n            }\r\n            fillUserData( binding.weight,user?.peso.toString())\r\n            fillUserData(binding.height,user?.altura.toString())\r\n            fillUserData(binding.dieteticType, user?.dietetic_preference.toString())\r\n            //TODO guardar strings de nivel actividad\r\n            // fillUserData(binding.userActivities,user?.actividad)\r\n\r\n            fillDropDown(dietetics, binding.dieteticType)\r\n            fillDropDown(activities, binding.userActivities)\r\n            fillDropDown(objetives, binding.userObjetives)\r\n\r\n\r\n            binding.weight.setOnFocusChangeListener{_,hasFocus->\r\n                if (!hasFocus) {\r\n                    userDataViewModel.updateData(user,binding.weight.text.toString(), \"peso\")\r\n                }\r\n            }\r\n        }\r\n        return binding.root\r\n    }\r\n\r\n    private fun fillUserData(dropDown: AutoCompleteTextView, userData: String) {\r\n        val index = dietetics.indexOf(userData)\r\n        dropDown.text= Editable.Factory.getInstance().newEditable(userData)\r\n    }\r\n\r\n    private fun fillUserData(input: TextInputEditText, userData: String) {\r\n\r\n        input.text = Editable.Factory.getInstance().newEditable(userData)\r\n    }\r\n\r\n    private fun fillDropDown(items: Array<String>, dropDown: AutoCompleteTextView) {\r\n        val adapter = ArrayAdapter(\r\n            requireContext(), android.R.layout.simple_dropdown_item_1line,\r\n            items\r\n        )\r\n        dropDown.setAdapter(adapter)\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/user/userDataFragment.kt b/app/src/main/java/com/example/app/ui/user/userDataFragment.kt
--- a/app/src/main/java/com/example/app/ui/user/userDataFragment.kt	
+++ b/app/src/main/java/com/example/app/ui/user/userDataFragment.kt	
@@ -25,8 +25,6 @@
     private val objetives = arrayOf("Perder peso", "Ganar masa muscular", "Comer más saludable")
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-
-
     }
 
     override fun onCreateView(
