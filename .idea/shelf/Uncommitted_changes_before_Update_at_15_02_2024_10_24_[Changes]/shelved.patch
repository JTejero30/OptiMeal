Index: app/src/main/java/com/example/app/ui/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.ui.home\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.lifecycle.lifecycleScope\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.example.app.R\r\nimport com.example.app.databinding.FragmentHomeBinding\r\nimport com.example.app.register2.RegisterView\r\nimport com.example.app.ui.home.adapter.HomeAdapter\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\n\r\nclass HomeFragment : Fragment() {\r\n    private var _binding: FragmentHomeBinding? = null\r\n    private val binding get() = _binding!!\r\n\r\n    private lateinit var googleSignInClient: GoogleSignInClient\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n    }\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        _binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n\r\n        val homeViewModel = ViewModelProvider(this).get(HomeViewModel::class.java)\r\n\r\n        homeViewModel.userEmail.observe(viewLifecycleOwner) {\r\n            binding.textUserEmail.text = it\r\n        }\r\n\r\n        homeViewModel.userName.observe(viewLifecycleOwner) {\r\n            binding.textUserName.text = it\r\n        }\r\n        //homeViewModel.getData3()\r\n\r\n\r\n        binding.loadingIndicator.visibility = View.VISIBLE\r\n        binding.homeRV.visibility = View.GONE\r\n\r\n        //Aqui lanzamos la corrutina para que se ejecute en segundo plano\r\n        lifecycleScope.launch(Dispatchers.Main) {\r\n            val rv = binding.homeRV\r\n            //Y aqui dentro estamos llamando la funcion getData, que como tinee un await\r\n            //Va a esperar hasta que se recojan todos los datos\r\n            val data = homeViewModel.getData()\r\n            binding.loadingIndicator.visibility = View.GONE\r\n            binding.homeRV.visibility = View.VISIBLE\r\n\r\n            data?.let {\r\n                rv.layoutManager = LinearLayoutManager(context)\r\n                rv.adapter = HomeAdapter(it)\r\n                Log.d(\"Comprobar\", \"HomeFragment rv=HomeAdapter ${rv.adapter}\")\r\n            }\r\n        }\r\n\r\n        binding.button.setOnClickListener() {\r\n\r\n            //Esto sirve para borrar el cache de credenciales, ya que cuando cerramos sesion, se quedan las credenciales degoogle\r\n            // no da la opcion de elegir cuenta de nuevo, automaticamente se inicia con la cuenta anterior usada\r\n            val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.your_web_client_id))\r\n                .requestEmail()\r\n                .build()\r\n\r\n            googleSignInClient = GoogleSignIn.getClient(requireActivity(), gso)\r\n            homeViewModel.logOut()\r\n            val intent = Intent(activity, RegisterView::class.java)\r\n            startActivity(intent)\r\n        }\r\n        /*\r\n                // Set up RecyclerView\r\n                val rv = binding.homeRV\r\n                rv.layoutManager = LinearLayoutManager(context)\r\n                val adapter = HomeAdapter(emptyList())\r\n                rv.adapter = adapter\r\n\r\n                // Set up loading indicator\r\n                val loadingIndicator = binding.imageView3\r\n                loadingIndicator.visibility = View.GONE\r\n\r\n                homeViewModel.isLoading.observe(viewLifecycleOwner) { isLoading ->\r\n                    if (isLoading) {\r\n                        loadingIndicator.visibility = View.VISIBLE\r\n                        rv.visibility = View.INVISIBLE\r\n                    } else {\r\n                        loadingIndicator.visibility = View.GONE\r\n                        rv.visibility = View.VISIBLE\r\n                        val data = homeViewModel.getData()\r\n                        data?.let {\r\n                            rv.layoutManager = LinearLayoutManager(context)\r\n                            rv.adapter = HomeAdapter(it)\r\n\r\n                            Log.d(\"Comprobar\", \"HomeFragment rv=HomeAdapter ${rv.adapter}\")\r\n                        }\r\n                    }\r\n                }*/\r\n        /*\r\n                var rv =binding.homeRV\r\n                rv.layoutManager = LinearLayoutManager(context)\r\n                rv.adapter = homeViewModel.getData()?.let { HomeAdapter(it) }\r\n                Log.d(\"Comprobar\",\"HomeFragment rv=HomeAdapter ${rv.adapter}\")\r\n                */\r\n        return binding.root\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/home/HomeFragment.kt b/app/src/main/java/com/example/app/ui/home/HomeFragment.kt
--- a/app/src/main/java/com/example/app/ui/home/HomeFragment.kt	(revision ad98652bccddc3c0b12235354550d6bc0e92dddc)
+++ b/app/src/main/java/com/example/app/ui/home/HomeFragment.kt	(date 1707985584000)
@@ -12,6 +12,8 @@
 import androidx.recyclerview.widget.LinearLayoutManager
 import com.example.app.R
 import com.example.app.databinding.FragmentHomeBinding
+import com.example.app.register.LoginActivity
+import com.example.app.register.RegisterActivity
 import com.example.app.register2.RegisterView
 import com.example.app.ui.home.adapter.HomeAdapter
 import com.google.android.gms.auth.api.signin.GoogleSignIn
@@ -77,7 +79,7 @@
 
             googleSignInClient = GoogleSignIn.getClient(requireActivity(), gso)
             homeViewModel.logOut()
-            val intent = Intent(activity, RegisterView::class.java)
+            val intent = Intent(activity, LoginActivity::class.java)
             startActivity(intent)
         }
         /*
