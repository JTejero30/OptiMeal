Index: app/src/main/java/com/example/app/ui/recipes/RecipeModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.ui.recipes\r\n\r\ndata class RecipeModel(\r\n\r\n    val nombre:String,\r\n    val imagen: String,\r\n    val ingredients: List<String>,\r\n    val macros: List<String>\r\n\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/recipes/RecipeModel.kt b/app/src/main/java/com/example/app/ui/recipes/RecipeModel.kt
--- a/app/src/main/java/com/example/app/ui/recipes/RecipeModel.kt	
+++ b/app/src/main/java/com/example/app/ui/recipes/RecipeModel.kt	
@@ -1,10 +1,7 @@
 package com.example.app.ui.recipes
-
 data class RecipeModel(
-
     val nombre:String,
     val imagen: String,
     val ingredients: List<String>,
     val macros: List<String>
-
 )
Index: app/src/main/java/com/example/app/ui/recipes/RecipesFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.ui.recipes\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.lifecycle.lifecycleScope\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.example.app.R\r\nimport com.example.app.databinding.FragmentRecipesBinding\r\n\r\nimport com.example.app.ui.recipes.adapter.RecipesAdapter\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\n\r\n\r\nclass RecipesFragment : Fragment() {\r\n    private var _binding: FragmentRecipesBinding? = null\r\n\r\n    private val binding get() = _binding!!\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        _binding = FragmentRecipesBinding.inflate(inflater,container,false)\r\n\r\n        val recipeViewModel = ViewModelProvider(this).get(RecipesViewModel::class.java)\r\n\r\n        binding.loadingIndicator.visibility = View.VISIBLE\r\n        binding.recipeRV.visibility = View.GONE\r\n\r\n        lifecycleScope.launch(Dispatchers.Main) {\r\n            val rv = binding.recipeRV\r\n            val data = recipeViewModel.getData()\r\n            binding.loadingIndicator.visibility = View.GONE\r\n            binding.recipeRV.visibility = View.VISIBLE\r\n\r\n            data?.let {\r\n                rv.layoutManager = LinearLayoutManager(context)\r\n                rv.adapter = RecipesAdapter(it)\r\n                Log.d(\"Comprobar\", \"RecipeFragment rv=RecipeAdapter ${rv.adapter}\")\r\n            }\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/ui/recipes/RecipesFragment.kt b/app/src/main/java/com/example/app/ui/recipes/RecipesFragment.kt
--- a/app/src/main/java/com/example/app/ui/recipes/RecipesFragment.kt	
+++ b/app/src/main/java/com/example/app/ui/recipes/RecipesFragment.kt	
@@ -19,14 +19,10 @@
 
 class RecipesFragment : Fragment() {
     private var _binding: FragmentRecipesBinding? = null
-
     private val binding get() = _binding!!
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
-
     }
-
     override fun onCreateView(
         inflater: LayoutInflater,
         container: ViewGroup?,
