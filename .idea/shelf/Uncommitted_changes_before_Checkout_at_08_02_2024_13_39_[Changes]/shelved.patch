Index: app/src/main/java/com/example/app/MVVM/Register/Register.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.MVVM.Register\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport com.example.app.User\r\nimport com.example.app.databinding.ActivityRegisterBinding\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.CollectionReference\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\n\r\nclass Register : AppCompatActivity() {\r\n    private lateinit var binding: ActivityRegisterBinding\r\n\r\n    private val fragmentManager = supportFragmentManager\r\n    private var userData: MutableMap<String, Any> = mutableMapOf(\r\n        \"dietetic_preference\" to \"\",\r\n        \"height\" to 0.00,\r\n        \"weight\" to 0.00,\r\n        \"data\" to \"\",\r\n        \"age\" to 0,\r\n        \"sex\" to \"\",\r\n        \"allergies\" to arrayOf<String>(),\r\n        \"deficit\" to 0.00,\r\n        \"activity\" to 0.0\r\n    )\r\n    private lateinit var user: User\r\n    private var progreso = 0\r\n\r\n    private var contador = 0\r\n\r\n    //private val db = Firebase.firestore\r\n    private lateinit var auth: FirebaseAuth\r\n\r\n    private val db = FirebaseFirestore.getInstance()\r\n    private val usersCollection: CollectionReference = db.collection(\"users\")\r\n\r\n    private var TDEE = 0.0\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityRegisterBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        auth = FirebaseAuth.getInstance()\r\n        val currentUser = auth.currentUser\r\n        if (currentUser != null) {\r\n            Log.d(\"comprobar\", \"User logged: ${currentUser.email}\")\r\n        }\r\n        //cargamos el primer fragmento\r\n        //TODO descomentar linea abajo y borrar otra:\r\n        replaceFragment(PersonalData())\r\n    }\r\n\r\n    public fun nextQuestion() {\r\n        progreso++\r\n        binding.progress.incrementProgressBy(1)\r\n        when (progreso) {\r\n            1 -> replaceFragment(PersonalData2())\r\n            2 -> replaceFragment(PhysicalActivity())\r\n            3 -> replaceFragment(Objetives())\r\n            4 -> {\r\n                calcularTDEE()\r\n                replaceFragment(Alergias())\r\n\r\n                val user = createUserFromJson()\r\n                usersCollection.add(user)\r\n            }\r\n\r\n            5 -> Log.d(\"User data:\", userData.toString())\r\n        }\r\n    }\r\n\r\n    //funcion que remplaza fragmentos por otros\r\n    private fun replaceFragment(fr: Fragment) {\r\n        val fragment = fr\r\n        var fragmentTransaction = fragmentManager.beginTransaction()\r\n        fragmentTransaction.replace(binding.fragmentContainer.id, fragment)\r\n        fragmentTransaction.commit()\r\n    }\r\n\r\n    //añadir datos al json\r\n    public fun addDato(key: String, dato: Any) {\r\n        userData.put(key, dato)\r\n    }\r\n\r\n    //funcion que calcula las calorias totales diarias de la persona\r\n    //es asincrona para hacerlo mas eficiente\r\n    fun calcularTDEE() {\r\n        val sex = userData[\"sex\"]\r\n        val peso = userData[\"weight\"].toString().toDouble()\r\n        val altura = userData[\"height\"].toString().toDouble()\r\n        val edad = userData[\"age\"].toString().toInt()\r\n        val actividad = userData[\"activity\"].toString().toDouble()\r\n        val deficit = userData[\"deficit\"].toString().toDouble()\r\n        val variableSex = if(sex==\"Hombre\") 5 else -161\r\n\r\n        /*Men: BMR =(10 x peso en kg) + (6,25 × altura en cm) - (5 × edad en años) + 5*/\r\n        /*Women: BMR = (10 x peso en kg) + (6,25 × altura en cm) - (5 × edad en años) - 161*/\r\n        /*del BMR sacamos el TDEE (total daily energy expenditure)*/\r\n\r\n        TDEE = ((10 * peso) + (6.25 * altura) - (5 * edad) + variableSex)* actividad * deficit\r\n\r\n\r\n        println(TDEE)\r\n    }\r\n\r\n    //Funcion que pasa el json a User\r\n    fun createUserFromJson(): User {\r\n        val dietetic_preference: String = userData[\"dietetic_preference\"].toString()\r\n        val sex = userData[\"sex\"].toString()\r\n        val peso = userData[\"weight\"].toString().toDouble()\r\n        val altura = userData[\"height\"].toString().toDouble()\r\n        val edad = userData[\"age\"].toString().toInt()\r\n        val actividad = userData[\"activity\"].toString().toDouble()\r\n        val deficit = userData[\"deficit\"].toString().toDouble()\r\n        val alergiasArray = userData[\"allergies\"].toString()\r\n        auth = FirebaseAuth.getInstance()\r\n\r\n        return User(\r\n            auth.currentUser?.uid,\r\n            auth.currentUser?.email,\r\n            dietetic_preference,\r\n            sex,\r\n            peso,\r\n            altura,\r\n            edad,\r\n            actividad,\r\n            deficit,\r\n            alergiasArray,\r\n            TDEE\r\n        )\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/MVVM/Register/Register.kt b/app/src/main/java/com/example/app/MVVM/Register/Register.kt
--- a/app/src/main/java/com/example/app/MVVM/Register/Register.kt	(revision 68b786e3735248ec538cc13d4bd92e3bd35d1f78)
+++ b/app/src/main/java/com/example/app/MVVM/Register/Register.kt	(date 1707395871064)
@@ -6,6 +6,8 @@
 import androidx.fragment.app.Fragment
 import com.example.app.User
 import com.example.app.databinding.ActivityRegisterBinding
+import com.example.app.databinding.FragmentPersonalDataBinding
+import com.example.app.databinding.PruebaBinding
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.firestore.CollectionReference
 import com.google.firebase.firestore.FirebaseFirestore
@@ -13,6 +15,7 @@
 
 class Register : AppCompatActivity() {
     private lateinit var binding: ActivityRegisterBinding
+    private lateinit var binding2: PruebaBinding
 
     private val fragmentManager = supportFragmentManager
     private var userData: MutableMap<String, Any> = mutableMapOf(
@@ -51,6 +54,7 @@
         //cargamos el primer fragmento
         //TODO descomentar linea abajo y borrar otra:
         replaceFragment(PersonalData())
+
     }
 
     public fun nextQuestion() {
@@ -70,6 +74,7 @@
 
             5 -> Log.d("User data:", userData.toString())
         }
+
     }
 
     //funcion que remplaza fragmentos por otros
Index: app/src/main/java/com/example/app/register/RegisterView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.app.register\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.fragment.app.Fragment\r\nimport com.example.app.MVVM.Register.Register\r\nimport com.example.app.databinding.ActivityRegisterViewBinding\r\nimport com.example.app.mainActivity.Inicio\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.CollectionReference\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\n\r\nclass RegisterView : AppCompatActivity() {\r\n    private lateinit var binding: ActivityRegisterViewBinding\r\n    private val fragmentManager = supportFragmentManager\r\n\r\n    private lateinit var auth: FirebaseAuth\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityRegisterViewBinding.inflate(layoutInflater)\r\n\r\n        setContentView(binding.root)\r\n\r\n        auth = FirebaseAuth.getInstance()\r\n\r\n        if (auth.currentUser != null) {\r\n            userLogged()\r\n        }\r\n        replaceFragment(LoginFragment())\r\n\r\n    }\r\n\r\n    public fun replaceFragment(fr: Fragment) {\r\n        val fragment = fr\r\n        var fragmentTransaction = fragmentManager.beginTransaction()\r\n        fragmentTransaction.replace(binding.fragmentContainer.id, fragment)\r\n        fragmentTransaction.commit()\r\n    }\r\n\r\n    public fun userLogged() {\r\n        Log.d(\"comprobar\", \"Correct Login\")\r\n\r\n        val inicioActivity: Intent = Intent(this, Inicio::class.java)\r\n        startActivity(inicioActivity)\r\n    }\r\n\r\n    public fun showAlert() {\r\n        val builder = AlertDialog.Builder(this)\r\n        builder.setTitle(\"Error\")\r\n        builder.setMessage(\"Se ha producido un error con la autenticacion del usuario\")\r\n        builder.setPositiveButton(\"Aceptar\", null)\r\n        val dialog: AlertDialog = builder.create()\r\n        dialog.show()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/app/register/RegisterView.kt b/app/src/main/java/com/example/app/register/RegisterView.kt
--- a/app/src/main/java/com/example/app/register/RegisterView.kt	(revision 68b786e3735248ec538cc13d4bd92e3bd35d1f78)
+++ b/app/src/main/java/com/example/app/register/RegisterView.kt	(date 1707395871065)
@@ -6,6 +6,7 @@
 import androidx.appcompat.app.AlertDialog
 import androidx.appcompat.app.AppCompatActivity
 import androidx.fragment.app.Fragment
+import com.example.app.MVVM.Register.PersonalData
 import com.example.app.MVVM.Register.Register
 import com.example.app.databinding.ActivityRegisterViewBinding
 import com.example.app.mainActivity.Inicio
@@ -29,8 +30,10 @@
 
         if (auth.currentUser != null) {
             userLogged()
+        }else{
+            replaceFragment(PersonalData())
         }
-        replaceFragment(LoginFragment())
+       // replaceFragment(LoginFragment())
 
     }
 
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".mainActivity.Inicio\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".MVVM.Register.Register\"\r\n            android:exported=\"true\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".register.RegisterView\"\r\n            android:exported=\"false\">\r\n\r\n        </activity>\r\n    </application>\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 68b786e3735248ec538cc13d4bd92e3bd35d1f78)
+++ b/app/src/main/AndroidManifest.xml	(date 1707395871064)
@@ -17,20 +17,20 @@
             android:exported="false" />
         <activity
             android:name=".MVVM.Register.Register"
-            android:exported="true" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
+            android:exported="false" >
 
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
         </activity>
         <activity
             android:name=".MainActivity"
             android:exported="false" />
         <activity
             android:name=".register.RegisterView"
-            android:exported="false">
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
 
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
         </activity>
     </application>
 </manifest>
\ No newline at end of file
